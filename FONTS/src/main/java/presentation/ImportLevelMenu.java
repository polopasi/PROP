package presentation;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Mikel Torres Mart√≠nez
 */
public class ImportLevelMenu extends javax.swing.JPanel {

    ViewController viewController;

    /**
     * Creates new form ImportLevelMenu
     * @param viewController is the viewController of the application.
     */
    public ImportLevelMenu(ViewController viewController) {
        initComponents();
        this.viewController = viewController;
        this.setSize(1280, 720);
        this.setVisible(false);
    }

    /**
     * Initializes the view. Opens the file chooser and imports the level. If there's an error shows an error message.
     * @param creator is the name of the user who created the level.
     */
    public void init(String creator) {
        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setDialogTitle("Select a .txt file");
        FileNameExtensionFilter restrict = new FileNameExtensionFilter("Only .txt files", "txt");
        jFileChooser1.setFileFilter(restrict);

        int returnValue = jFileChooser1.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File file = jFileChooser1.getSelectedFile();
            String fullFileName = file.getAbsolutePath();

            try {
                this.viewController.importLevel(fullFileName, creator);
                JOptionPane.showMessageDialog(this, "Import Successful", "Success", JOptionPane.INFORMATION_MESSAGE);
                SwingUtilities.invokeLater(this::returnToPreviousView);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "An error occurred while importing the level.\n\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                init(creator);
            }
        } else {
            SwingUtilities.invokeLater(this::returnToPreviousView);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jFileChooser1 = new javax.swing.JFileChooser();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jFileChooser1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>
    
    
    /**
    * Returns to the previous view.
    */
    private void returnToPreviousView() {
        this.viewController.popView();
    }
    
    /**
    * Unused method of jFileChooser1.
    */
    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {
    }

    // Variables declaration - do not modify
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration
}
